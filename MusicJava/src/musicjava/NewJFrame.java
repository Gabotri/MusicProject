/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package musicjava;

import java.io.File;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;


/**
 *
 * @author gusta
 */
public class NewJFrame extends javax.swing.JFrame {

    private java.util.List<String> musicas = java.util.Arrays.asList(
    "src/musicjava/Musicas/musica1.wav",
    "src/musicjava/Musicas/musica2.wav",
    "src/musicjava/Musicas/musica3.wav"
    );
    
    // Utilitários do botão de play
    private Clip clip; // Variável para o áudio
    private boolean isPlaying = false; // Controle do estado
    
    // Utilitários do botão de voltar
    private int musicaAtual = 0; // Índice da música atual
    private int clickCount = 0; // Contador de cliques
    private javax.swing.Timer clickTimer; // Timer para controle de cliques

    public NewJFrame() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE); // Encerra ao fechar
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("PLay");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("jButton4");

        jButton5.setText("jButton5");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addGap(2, 2, 2)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(271, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (clip != null && clip.isOpen()) {
        if (clip.isRunning()) {
            // Pausa a música
            clip.stop();
            jButton1.setText("▶️"); // Atualiza o texto do botão para "Play"
        } else {
            // Retoma a música
            clip.start();
            jButton1.setText("⏸️"); // Atualiza o texto do botão para "Pause"
        }
    } else {
        // Caso o clip esteja nulo ou fechado, inicia a reprodução da música atual
        tocarMusica(musicas.get(musicaAtual));
        jButton1.setText("⏸️"); // Atualiza o texto do botão para "Pause"
    }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        clickCount++; // Incrementa o contador de cliques
    
    if (clickTimer == null) {
        // Configura o Timer para detectar duplo clique
        clickTimer = new javax.swing.Timer(300, e -> {
            if (clickCount == 1) {
                // Ação de um clique: reinicia a música
                tocarMusica(musicas.get(musicaAtual));
            } else if (clickCount >= 2) {
                // Ação de dois cliques: música anterior
                musicaAtual = (musicaAtual > 0) ? musicaAtual - 1 : musicas.size() - 1;
                tocarMusica(musicas.get(musicaAtual));
            }
            // Reinicia o contador
            clickCount = 0;
            clickTimer.stop(); // Para o Timer
        });
        clickTimer.setRepeats(false);
    }
    clickTimer.restart(); // Reinicia o Timer ao clicar novamente
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (musicas != null && !musicas.isEmpty()) {
        // Incrementa o índice para a próxima música
        musicaAtual = (musicaAtual + 1) % musicas.size();
        
        // Para a música atual, se estiver tocando
        if (clip != null && clip.isRunning()) {
            clip.stop();
        }
        
        // Inicia a próxima música
        tocarMusica(musicas.get(musicaAtual));
        
        // Atualiza o botão Play/Pause para refletir o estado
        jButton1.setText("⏸️"); // Mostra que a música está tocando
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tocarMusica(String caminho) {
    try {
        // Verifica se já existe um clip e o encerra antes de criar outro
        if (clip != null && clip.isOpen()) {
            clip.close();
        }
        
        // Obtém o arquivo de áudio
        File arquivoAudio = new File(caminho);
        
        // Cria um fluxo de entrada de áudio
        AudioInputStream audioStream = AudioSystem.getAudioInputStream(arquivoAudio);
        
        // Configura o clip para reproduzir o áudio
        clip = AudioSystem.getClip();
        clip.open(audioStream);
        
        // Inicia a reprodução
        clip.start();
    } catch (Exception e) {
        System.out.println("Erro ao reproduzir a música: " + e.getMessage());
        e.printStackTrace();
    }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // Definir o look and feel
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Criar e exibir o JFrame
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);  // Exibe o JFrame
            }
        });

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    // End of variables declaration//GEN-END:variables
}
